{"ast":null,"code":"var _jsxFileName = \"/home/thes/react-projects/consume-petstore-rest-api/src/webpages/pet.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction submitOrder(e) {\n  e.preventDefault();\n  console.log('You clicked submit.');\n  const requestPayload = {\n    \"id\": 1,\n    \"petId\": 1,\n    \"quantity\": 1,\n    \"shipDate\": \"2021-12-09T11:33:07.005Z\",\n    \"status\": \"placed\",\n    \"complete\": true\n  };\n  fetch(\"http://insrsaeu.apigw-aw-eu.webmethods.io/gateway/team1_petstore/1.0.5/store/order\", {\n    method: 'POST',\n    // *GET, POST, PUT, DELETE, etc.\n    headers: {\n      'Content-Type': 'application/json' // 'Content-Type': 'application/x-www-form-urlencoded',\n\n    },\n    body: JSON.stringify(requestPayload) // body data type must match \"Content-Type\" header\n\n  }).then(res => res.json()).then(data => {\n    alert(\"Order submitted: \" + JSON.stringify(data));\n    console.log(data);\n  }, error => {\n    alert(\"Error: \" + JSON.stringify(error));\n    console.log(error);\n  });\n}\n\nconst Pet = props => {\n  _s();\n\n  var id = props.match.params.id;\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [pet, setPet] = useState([]);\n  useEffect(() => {\n    fetch(\"http://insrsaeu.apigw-aw-eu.webmethods.io/gateway/team1_petstore/1.0.5/pet/\" + id).then(res => res.json()).then(data => {\n      console.log(data);\n      setPet(data);\n      setIsLoaded(true);\n    }, error => {\n      setIsLoaded(true);\n      setError(error);\n    });\n  }, []);\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 16\n    }, this);\n  }\n\n  if (!isLoaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 16\n    }, this);\n  }\n\n  if (pet) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: pet.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Category: \", pet.category.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Status: \", pet.status]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: submitOrder,\n        children: \"Submit Order\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this);\n  }\n};\n\n_s(Pet, \"nqhq0Wy3r2P+grgAOROF7XRCoiI=\");\n\n_c = Pet;\nexport default Pet;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pet\");","map":{"version":3,"sources":["/home/thes/react-projects/consume-petstore-rest-api/src/webpages/pet.js"],"names":["React","useState","useEffect","submitOrder","e","preventDefault","console","log","requestPayload","fetch","method","headers","body","JSON","stringify","then","res","json","data","alert","error","Pet","props","id","match","params","setError","isLoaded","setIsLoaded","pet","setPet","message","name","category","status"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;AAEA,SAASC,WAAT,CAAqBC,CAArB,EAAwB;AACpBA,EAAAA,CAAC,CAACC,cAAF;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACA,QAAMC,cAAc,GAAG;AACnB,UAAM,CADa;AAEnB,aAAS,CAFU;AAGnB,gBAAY,CAHO;AAInB,gBAAY,0BAJO;AAKnB,cAAU,QALS;AAMnB,gBAAY;AANO,GAAvB;AAQAC,EAAAA,KAAK,CAAC,oFAAD,EAAuF;AACxFC,IAAAA,MAAM,EAAE,MADgF;AACxE;AAChBC,IAAAA,OAAO,EAAE;AACL,sBAAgB,kBADX,CAEL;;AAFK,KAF+E;AAMxFC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,cAAf,CANkF,CAMnD;;AANmD,GAAvF,CAAL,CAQCO,IARD,CAQMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EARb,EASCF,IATD,CAUKG,IAAD,IAAU;AACNC,IAAAA,KAAK,CAAC,sBAAsBN,IAAI,CAACC,SAAL,CAAeI,IAAf,CAAvB,CAAL;AACAZ,IAAAA,OAAO,CAACC,GAAR,CAAYW,IAAZ;AACH,GAbL,EAcKE,KAAD,IAAW;AACPD,IAAAA,KAAK,CAAC,YAAYN,IAAI,CAACC,SAAL,CAAeM,KAAf,CAAb,CAAL;AACAd,IAAAA,OAAO,CAACC,GAAR,CAAYa,KAAZ;AACH,GAjBL;AAmBH;;AAED,MAAMC,GAAG,GAAGC,KAAK,IAAI;AAAA;;AACjB,MAAIC,EAAE,GAAGD,KAAK,CAACE,KAAN,CAAYC,MAAZ,CAAmBF,EAA5B;AAEA,QAAM,CAACH,KAAD,EAAQM,QAAR,IAAoBzB,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAAC0B,QAAD,EAAWC,WAAX,IAA0B3B,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAAC4B,GAAD,EAAMC,MAAN,IAAgB7B,QAAQ,CAAC,EAAD,CAA9B;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZO,IAAAA,KAAK,CAAC,gFAAgFc,EAAjF,CAAL,CACKR,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAGSG,IAAD,IAAU;AACNZ,MAAAA,OAAO,CAACC,GAAR,CAAYW,IAAZ;AACAY,MAAAA,MAAM,CAACZ,IAAD,CAAN;AACAU,MAAAA,WAAW,CAAC,IAAD,CAAX;AACH,KAPT,EAQSR,KAAD,IAAW;AACPQ,MAAAA,WAAW,CAAC,IAAD,CAAX;AACAF,MAAAA,QAAQ,CAACN,KAAD,CAAR;AACH,KAXT;AAaH,GAdQ,EAcN,EAdM,CAAT;;AAgBA,MAAIA,KAAJ,EAAW;AACP,wBAAO;AAAA,4BAAaA,KAAK,CAACW,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AACD,MAAI,CAACJ,QAAL,EAAe;AACX,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAED,MAAIE,GAAJ,EAAS;AACL,wBACI;AAAA,8BACI;AAAA,kBAAKA,GAAG,CAACG;AAAT;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,iCACeH,GAAG,CAACI,QAAJ,CAAaD,IAD5B;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAKI;AAAA,+BACaH,GAAG,CAACK,MADjB;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,eAQI;AAAQ,QAAA,OAAO,EAAE/B,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAcH;AACJ,CA9CD;;GAAMkB,G;;KAAAA,G;AAgDN,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction submitOrder(e) {\n    e.preventDefault();\n    console.log('You clicked submit.');\n    const requestPayload = {\n        \"id\": 1,\n        \"petId\": 1,\n        \"quantity\": 1,\n        \"shipDate\": \"2021-12-09T11:33:07.005Z\",\n        \"status\": \"placed\",\n        \"complete\": true\n    };\n    fetch(\"http://insrsaeu.apigw-aw-eu.webmethods.io/gateway/team1_petstore/1.0.5/store/order\", {\n        method: 'POST', // *GET, POST, PUT, DELETE, etc.\n        headers: {\n            'Content-Type': 'application/json'\n            // 'Content-Type': 'application/x-www-form-urlencoded',\n        },\n        body: JSON.stringify(requestPayload) // body data type must match \"Content-Type\" header\n    })\n    .then(res => res.json())\n    .then(\n        (data) => {\n            alert(\"Order submitted: \" + JSON.stringify(data))\n            console.log(data);\n        },\n        (error) => {\n            alert(\"Error: \" + JSON.stringify(error))\n            console.log(error);\n        }\n    )\n}\n\nconst Pet = props => {\n    var id = props.match.params.id;\n\n    const [error, setError] = useState(null);\n    const [isLoaded, setIsLoaded] = useState(false);\n    const [pet, setPet] = useState([]);\n    \n    useEffect(() => {\n        fetch(\"http://insrsaeu.apigw-aw-eu.webmethods.io/gateway/team1_petstore/1.0.5/pet/\" + id)\n            .then(res => res.json())\n            .then(\n                (data) => {\n                    console.log(data);\n                    setPet(data);\n                    setIsLoaded(true);\n                },\n                (error) => {\n                    setIsLoaded(true);\n                    setError(error);\n                }\n            )\n    }, [])\n\n    if (error) {\n        return <div>Error: {error.message}</div>;\n    }\n    if (!isLoaded) {\n        return <div>Loading...</div>;\n    }  \n    \n    if (pet) {\n        return (\n            <div>\n                <h1>{pet.name}</h1>\n                <div>\n                    Category: {pet.category.name}\n                </div>\n                <div>\n                    Status: {pet.status}\n                </div>\n                <button onClick={submitOrder}>\n                    Submit Order\n                </button>\n           </div>\n        )\n    }\n};\n\nexport default Pet;\n"]},"metadata":{},"sourceType":"module"}