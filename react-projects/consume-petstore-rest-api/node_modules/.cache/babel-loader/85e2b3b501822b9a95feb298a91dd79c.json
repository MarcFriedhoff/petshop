{"ast":null,"code":"var _jsxFileName = \"/home/thes/react-projects/consume-petstore-rest-api/src/webpages/pet.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Pet = props => {\n  _s();\n\n  var id = props.match.params.id;\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [pet, setPet] = useState({});\n  const [orders, setOrders] = useState([]);\n\n  function submitOrder(e) {\n    e.preventDefault();\n    console.log('You clicked submit.');\n    const requestPayload = {\n      \"id\": orders.length,\n      \"petId\": pet.id,\n      \"quantity\": 1,\n      \"shipDate\": \"2021-12-09T11:33:07.005Z\",\n      \"status\": \"placed\",\n      \"complete\": true\n    };\n    fetch(\"http://insrsaeu.apigw-aw-eu.webmethods.io/gateway/team1_petstore/1.0.5/store/order\", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(requestPayload) // body data type must match \"Content-Type\" header\n\n    }).then(res => res.json()).then(data => {\n      alert(\"Order submitted: \" + JSON.stringify(data));\n      console.log(data);\n    }, error => {\n      alert(\"Error: \" + JSON.stringify(error));\n      console.log(error);\n    });\n  }\n\n  useEffect(() => {\n    fetch(\"http://insrsaeu.apigw-aw-eu.webmethods.io/gateway/team1_petstore/1.0.5/pet/\" + id).then(res => res.json()).then(data => {\n      console.log(data);\n      setPet(data);\n      setIsLoaded(true);\n    }, error => {\n      setIsLoaded(true);\n      setError(error);\n    });\n  }, []);\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 16\n    }, this);\n  }\n\n  if (!isLoaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 16\n    }, this);\n  }\n\n  if (pet) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: pet.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Category: \", pet.category.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Status: \", pet.status]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: submitOrder,\n        children: \"Submit Order\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this);\n  }\n};\n\n_s(Pet, \"+GYIzvY+9X52uPV0QasIFf+RJXQ=\");\n\n_c = Pet;\nexport default Pet;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pet\");","map":{"version":3,"sources":["/home/thes/react-projects/consume-petstore-rest-api/src/webpages/pet.js"],"names":["React","useState","useEffect","Pet","props","id","match","params","error","setError","isLoaded","setIsLoaded","pet","setPet","orders","setOrders","submitOrder","e","preventDefault","console","log","requestPayload","length","fetch","method","headers","body","JSON","stringify","then","res","json","data","alert","message","name","category","status"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;AAEA,MAAMC,GAAG,GAAGC,KAAK,IAAI;AAAA;;AACjB,MAAIC,EAAE,GAAGD,KAAK,CAACE,KAAN,CAAYC,MAAZ,CAAmBF,EAA5B;AAEA,QAAM,CAACG,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACW,GAAD,EAAMC,MAAN,IAAgBZ,QAAQ,CAAC,EAAD,CAA9B;AACA,QAAM,CAACa,MAAD,EAASC,SAAT,IAAsBd,QAAQ,CAAC,EAAD,CAApC;;AAEA,WAASe,WAAT,CAAqBC,CAArB,EAAwB;AACpBA,IAAAA,CAAC,CAACC,cAAF;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACA,UAAMC,cAAc,GAAG;AACnB,YAAMP,MAAM,CAACQ,MADM;AAEnB,eAASV,GAAG,CAACP,EAFM;AAGnB,kBAAY,CAHO;AAInB,kBAAY,0BAJO;AAKnB,gBAAU,QALS;AAMnB,kBAAY;AANO,KAAvB;AAQAkB,IAAAA,KAAK,CAAC,oFAAD,EAAuF;AACxFC,MAAAA,MAAM,EAAE,MADgF;AAExFC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX,OAF+E;AAKxFC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,cAAf,CALkF,CAKnD;;AALmD,KAAvF,CAAL,CAOCQ,IAPD,CAOMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAPb,EAQCF,IARD,CASKG,IAAD,IAAU;AACNC,MAAAA,KAAK,CAAC,sBAAsBN,IAAI,CAACC,SAAL,CAAeI,IAAf,CAAvB,CAAL;AACAb,MAAAA,OAAO,CAACC,GAAR,CAAYY,IAAZ;AACH,KAZL,EAaKxB,KAAD,IAAW;AACPyB,MAAAA,KAAK,CAAC,YAAYN,IAAI,CAACC,SAAL,CAAepB,KAAf,CAAb,CAAL;AACAW,MAAAA,OAAO,CAACC,GAAR,CAAYZ,KAAZ;AACH,KAhBL;AAkBH;;AAEDN,EAAAA,SAAS,CAAC,MAAM;AACZqB,IAAAA,KAAK,CAAC,gFAAgFlB,EAAjF,CAAL,CACKwB,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAGSG,IAAD,IAAU;AACNb,MAAAA,OAAO,CAACC,GAAR,CAAYY,IAAZ;AACAnB,MAAAA,MAAM,CAACmB,IAAD,CAAN;AACArB,MAAAA,WAAW,CAAC,IAAD,CAAX;AACH,KAPT,EAQSH,KAAD,IAAW;AACPG,MAAAA,WAAW,CAAC,IAAD,CAAX;AACAF,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACH,KAXT;AAaH,GAdQ,EAcN,EAdM,CAAT;;AAgBA,MAAIA,KAAJ,EAAW;AACP,wBAAO;AAAA,4BAAaA,KAAK,CAAC0B,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AACD,MAAI,CAACxB,QAAL,EAAe;AACX,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAED,MAAIE,GAAJ,EAAS;AACL,wBACI;AAAA,8BACI;AAAA,kBAAKA,GAAG,CAACuB;AAAT;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,iCACevB,GAAG,CAACwB,QAAJ,CAAaD,IAD5B;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAKI;AAAA,+BACavB,GAAG,CAACyB,MADjB;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,eAQI;AAAQ,QAAA,OAAO,EAAErB,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAcH;AACJ,CA9ED;;GAAMb,G;;KAAAA,G;AAgFN,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst Pet = props => {\n    var id = props.match.params.id;\n\n    const [error, setError] = useState(null);\n    const [isLoaded, setIsLoaded] = useState(false);\n    const [pet, setPet] = useState({});\n    const [orders, setOrders] = useState([]);\n\n    function submitOrder(e) {\n        e.preventDefault();\n        console.log('You clicked submit.');\n        const requestPayload = {\n            \"id\": orders.length,\n            \"petId\": pet.id,\n            \"quantity\": 1,\n            \"shipDate\": \"2021-12-09T11:33:07.005Z\",\n            \"status\": \"placed\",\n            \"complete\": true\n        };\n        fetch(\"http://insrsaeu.apigw-aw-eu.webmethods.io/gateway/team1_petstore/1.0.5/store/order\", {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(requestPayload) // body data type must match \"Content-Type\" header\n        })\n        .then(res => res.json())\n        .then(\n            (data) => {\n                alert(\"Order submitted: \" + JSON.stringify(data))\n                console.log(data);\n            },\n            (error) => {\n                alert(\"Error: \" + JSON.stringify(error))\n                console.log(error);\n            }\n        )\n    }\n        \n    useEffect(() => {\n        fetch(\"http://insrsaeu.apigw-aw-eu.webmethods.io/gateway/team1_petstore/1.0.5/pet/\" + id)\n            .then(res => res.json())\n            .then(\n                (data) => {\n                    console.log(data);\n                    setPet(data);\n                    setIsLoaded(true);\n                },\n                (error) => {\n                    setIsLoaded(true);\n                    setError(error);\n                }\n            )\n    }, [])\n\n    if (error) {\n        return <div>Error: {error.message}</div>;\n    }\n    if (!isLoaded) {\n        return <div>Loading...</div>;\n    }  \n    \n    if (pet) {\n        return (\n            <div>\n                <h1>{pet.name}</h1>\n                <div>\n                    Category: {pet.category.name}\n                </div>\n                <div>\n                    Status: {pet.status}\n                </div>\n                <button onClick={submitOrder}>\n                    Submit Order\n                </button>\n           </div>\n        )\n    }\n};\n\nexport default Pet;\n"]},"metadata":{},"sourceType":"module"}